
@{
    ViewBag.Title = "AdvancedSearch";
}
@Scripts.Render("~/bundles/jquery")

<h2>Advanced Search</h2>


@using (Html.BeginForm("Searcher", "Home", FormMethod.Get))
{
    <div>

        <input type="text" placeholder="Location" id="location" class="form-control" />

        <input type="button" class="btn btn-info" value="add" onclick="addElementToSpan('locationList', 'locationSearchElement', 'location', 'locationsToStringId')" />
        <span id="locationList"></span>

    </div>

    <div>

        <input type="text" placeholder="Area" id="area" class="form-control" />

        <input type="button" class="btn btn-info" value="add" onclick="addElementToSpan('areaList', 'areaSearchElement', 'area', 'areasToStringId')" />
        <span id="areaList"></span>

    </div>


    <div>

        <input type="text" placeholder="Category" id="category" class="form-control" />

        <input type="button" class="btn btn-info" value="add" onclick="addElementToSpan('categoryList', 'categorySearchElement', 'category', 'categoriesToStringId')" />
        <span id="categoryList"></span>

    </div>

    <input type="submit"  target="_blank" class="btn btn-info" onclick="clearEverything()"/>
    <input type="text" name="locationsToString" id="locationsToStringId" />
    <input type="text" name="areasToString" id="areasToStringId" />
    <input type="text" name="categoriesToString" id="categoriesToStringId" />
}

<script>


    let seacrchObj = {}
    function addElementToSpan(spanId, searchParameter, searchInput, parameterToStringId) {

        if (!Object.keys(seacrchObj).includes(spanId))
            seacrchObj[spanId] = [];

        if (document.getElementById(searchInput).value.replace(/\s/g, '').length &&
            !seacrchObj[spanId].includes(document.getElementById(searchInput).value)) {

            innerSpanId = searchParameter + document.getElementById(searchInput).value;
            innerSpanId = innerSpanId.replace(/ /g, "_");
            console.log(innerSpanId)
            document.getElementById(spanId).innerHTML += " " + "<span id = " + innerSpanId + ">" + document.getElementById(searchInput).value + `<a class="glyphicon glyphicon-remove"  onclick="deleteSearchItem('` + spanId + `', '` + innerSpanId + `', '` + parameterToStringId + `')"></a>` + "</span>";
          
            seacrchObj[spanId].push((document.getElementById(innerSpanId).innerHTML).split("<")[0])
           
            document.getElementById(searchInput).value = "";
           
            document.getElementById(parameterToStringId).value = seacrchObj[spanId].join(",");
          

        }
    }

    function deleteSearchItem(spanId, innerSpanId, parameterToStringId) {

        seacrchObj[spanId] = seacrchObj[spanId].filter(element => element != (document.getElementById(innerSpanId).innerHTML).split("<")[0]);
        console.log(seacrchObj[spanId]);
        document.getElementById(parameterToStringId).value = seacrchObj[spanId].join(",")
        let elem = document.getElementById(innerSpanId);
        elem.remove();



    }




</script>

<script>

    $(document).ready(function () {
        let viewModel = {
            categoryIds: []
        };

        var categories = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            remote: {
                url: '/api/categories?query=%QUERY',
                wildcard: '%QUERY'
            }
        });

        $('#category').typeahead({
            minLength: 1,
            highlight: true
        },
            {
                name: 'categories',
                display: 'name',
                source: categories
            }).on("typeahead:select", function (c, category) {
                viewModel.categoryId = category.id;
                console.log(category.id);
            });
    });

    $(document).ready(function () {
        let viewModel = {
            locationIds: []
        };

        var locations = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            remote: {
                url: '/api/locations?query=%QUERY',
                wildcard: '%QUERY'
            }
        });

        $('#location').typeahead({
            highlight: true,
            minLength: 1
        },
            {
                name: 'locations',
                displayKey: 'name',
                source: locations
            }).on("typeahead:select", function (l, location) {
                viewModel.locationId = location.id;
                console.log(location.id);
            });
    });


    $(document).ready(function () {
        let viewModel = {
            areaIds: []
        };

        var areas = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            remote: {
                url: '/api/areas?query=%QUERY',
                wildcard: '%QUERY'
            }
        });

        $('#area').typeahead({
            minLength: 1,
            highlight: true
        },
            {
                name: 'areas',
                display: 'name',
                source: areas
            }).on("typeahead:select", function (a, area) {
                viewModel.areaId = area.id;
                console.log(area.id);
            });
    });


</script>